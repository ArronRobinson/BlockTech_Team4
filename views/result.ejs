<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MatchCast - Your Recommendation</title>
    <link rel="stylesheet" href="/result.css">
    <link rel="stylesheet" href="/all.css">
</head>
<body>
    <header>
        <%- include('partials/nav') %>
    </header>

    <main>
       
        <div class="recommendation-container">
            <% if (podcast && spotify) { %>
                <section class="podcast-header">
                    <div>
                        <p><span class="recommendation-label">We recommend</span></p>
                        <h2><%= podcast.title %></h2>
                        <p class="spotify-description">
                            <span>Spotify description:</span> 
                            <span class="truncated-description"><%= spotify.description %></span>
                        </p>
                    </div>
                    <div>
                        <section class="podcast-image-container" data-name="<%= podcast.title %>">
                            <% if (spotify.image) { %>
                                <img src="<%= spotify.image %>" alt="<%= podcast.title %>" class="podcast-image">
                            <% } else { %>
                                <img src="/images/podcast-placeholder.jpg" alt="Podcast Placeholder Image" class="podcast-image">
                            <% } %>
                        </section>
                    </div>
                </section>
            

                <section class="explanation">
                    <h3>Why you might like it</h3>
                    <p><%= podcast.explanation || "Based on your interests and preferences, we think you'll enjoy this podcast. It matches your taste in content and listening style." %></p>
                    
                    <div class="podcast-tags">
                        <% if (podcast.tags && podcast.tags.length > 0) { %>
                            <h4>Tags:</h4>
                            <ul class="tag-list">
                                <% podcast.tags.forEach(tag => { %>
                                    <li class="tag"><%= tag %></li>
                                <% }) %>
                            </ul>
                        <% } %>
                    </div>
                </section>

                <section class="spotify-section">
                    <h3>Listen on Spotify</h3>
                    <% if (spotify.embed_url) { %>
                        <div class="spotify-player">
                            <iframe 
                                src="<%= spotify.embed_url %>" 
                                width="100%" 
                                height="232" 
                                frameborder="0" 
                                allowtransparency="true" 
                                allow="encrypted-media">
                            </iframe>
                        </div>
                    <% } else if (spotify.spotify_url) { %>
                        <a href="<%= spotify.spotify_url %>" target="_blank" class="spotify-link">
                            <img src="/images/spotify-logo.png" alt="Spotify Logo" class="spotify-logo">
                            Open in Spotify
                        </a>
                    <% } %>
                </section>

                <section class="actions">
                    <a href="/survey" class="action-button">Try Another Recommendation</a>
                    <a href="/favorite" class="action-button secondary">View My Favorites</a>
                </section>
            <% } else { %>
                <section class="no-results">
                    <h2>Sorry, we couldn't find a matching podcast</h2>
                    <p>Please try again with different preferences or categories.</p>
                    <a href="/survey" class="action-button">Back to Survey</a>
                </section>
            <% } %>
        </div>

        <!-- Background elements -->
        <section class="background-elements">
            <div class="circle"></div>
            <div class="circleTwo"></div>
        </section>
    </main>

    <!-- Create a global variable with podcast data -->
    <script>
        window.podcastData = <% if (podcast && spotify) { %> {
            title: '<%= podcast.title %>',
            description: '<%= podcast.description || spotify.description %>',
            tags: <%- JSON.stringify(podcast.tags || []) %>,
            spotify_url: '<%= spotify.spotify_url || "" %>',
            image: '<%= spotify.image || "" %>',
            available: true
        } <% } else { %> { available: false } <% } %>
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const saveButton = document.getElementById('save-favorite');
            if (saveButton) {
                saveButton.addEventListener('click', async function() {
                    try {
                        <% if (podcast && spotify) { %>
                        const podcastData = {
                            title: '<%= podcast.title %>',
                            description: '<%= podcast.description || spotify.description %>',
                            tags: <%- JSON.stringify(podcast.tags || []) %>,
                            spotify_url: '<%= spotify.spotify_url || "" %>',
                            image: '<%= spotify.image || "" %>'
                        };
                        
                        const response = await fetch('/save-favorite', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ podcastData }),
                        });
                        
                        const data = await response.json();
                        if (data.success) {
                            saveButton.classList.add('liked');
                            saveButton.querySelector('.like-text').textContent = 'Saved to Favorites';
                            saveButton.disabled = true;
                        } else {
                            if (data.message === 'Authentication required') {
                                window.location.href = '/login?redirect=/result';
                            } else {
                                alert('Failed to save to favorites: ' + data.message);
                            }
                        }
                        <% } %>
                    } catch (error) {
                        console.error('Error:', error);
                        alert('An error occurred while saving to favorites');
                    }
                });
            }
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const descriptionEl = document.querySelector('.truncated-description');
            if (!descriptionEl) return;
            
            // Check if the content is truncated by comparing scrollHeight with clientHeight
            const isTruncated = descriptionEl.scrollHeight > descriptionEl.clientHeight;
            
            if (isTruncated) {
                const button = document.createElement('button');
                button.className = 'show-more-button';
                button.textContent = 'Read more';
                
                button.addEventListener('click', function() {
                    if (descriptionEl.classList.contains('show-full-text')) {
                        descriptionEl.classList.remove('show-full-text');
                        button.textContent = 'Read more';
                        // Scroll back to where the description starts
                        descriptionEl.scrollIntoView({ behavior: 'smooth' });
                    } else {
                        descriptionEl.classList.add('show-full-text');
                        button.textContent = 'Read less';
                    }
                });
                
                // Insert button after the description
                descriptionEl.parentNode.insertBefore(button, descriptionEl.nextSibling);
            }
        });
    </script>

    <script src="/script/frontend.js"></script>
</body>
</html>

